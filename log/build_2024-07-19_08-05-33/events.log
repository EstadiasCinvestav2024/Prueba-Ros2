[0.000000] (-) TimerEvent: {}
[0.005317] (holonomic_robot) JobQueued: {'identifier': 'holonomic_robot', 'dependencies': OrderedDict()}
[0.005481] (occupancy_grid_demo) JobQueued: {'identifier': 'occupancy_grid_demo', 'dependencies': OrderedDict()}
[0.005560] (holonomic_robot) JobStarted: {'identifier': 'holonomic_robot'}
[0.100029] (-) TimerEvent: {}
[0.221479] (-) TimerEvent: {}
[0.329275] (-) TimerEvent: {}
[0.433407] (-) TimerEvent: {}
[0.545278] (-) TimerEvent: {}
[0.653272] (-) TimerEvent: {}
[0.765255] (-) TimerEvent: {}
[0.869706] (-) TimerEvent: {}
[0.973360] (-) TimerEvent: {}
[1.074751] (-) TimerEvent: {}
[1.194536] (-) TimerEvent: {}
[1.330160] (-) TimerEvent: {}
[1.432183] (-) TimerEvent: {}
[1.533786] (-) TimerEvent: {}
[1.634845] (-) TimerEvent: {}
[1.735954] (-) TimerEvent: {}
[1.859089] (-) TimerEvent: {}
[1.968859] (-) TimerEvent: {}
[2.076030] (-) TimerEvent: {}
[2.189382] (-) TimerEvent: {}
[2.293519] (-) TimerEvent: {}
[2.405234] (-) TimerEvent: {}
[2.513315] (-) TimerEvent: {}
[2.617251] (-) TimerEvent: {}
[2.724044] (-) TimerEvent: {}
[2.829447] (-) TimerEvent: {}
[2.937431] (-) TimerEvent: {}
[3.041398] (-) TimerEvent: {}
[3.153420] (-) TimerEvent: {}
[3.255946] (-) TimerEvent: {}
[3.365357] (-) TimerEvent: {}
[3.469839] (-) TimerEvent: {}
[3.571351] (-) TimerEvent: {}
[3.672688] (-) TimerEvent: {}
[3.777030] (-) TimerEvent: {}
[3.879080] (-) TimerEvent: {}
[3.982167] (-) TimerEvent: {}
[4.083919] (-) TimerEvent: {}
[4.189975] (-) TimerEvent: {}
[4.301691] (-) TimerEvent: {}
[4.406640] (-) TimerEvent: {}
[4.515940] (-) TimerEvent: {}
[4.633352] (-) TimerEvent: {}
[4.771096] (-) TimerEvent: {}
[4.875587] (-) TimerEvent: {}
[4.982666] (-) TimerEvent: {}
[5.096376] (-) TimerEvent: {}
[5.205389] (-) TimerEvent: {}
[5.309417] (-) TimerEvent: {}
[5.412103] (-) TimerEvent: {}
[5.513642] (-) TimerEvent: {}
[5.616087] (-) TimerEvent: {}
[5.718440] (-) TimerEvent: {}
[5.822785] (-) TimerEvent: {}
[5.923728] (-) TimerEvent: {}
[6.028086] (-) TimerEvent: {}
[6.130704] (-) TimerEvent: {}
[6.253446] (-) TimerEvent: {}
[6.364276] (-) TimerEvent: {}
[6.473818] (-) TimerEvent: {}
[6.577961] (-) TimerEvent: {}
[6.683678] (-) TimerEvent: {}
[6.786845] (-) TimerEvent: {}
[6.893828] (-) TimerEvent: {}
[6.995385] (-) TimerEvent: {}
[7.101401] (-) TimerEvent: {}
[7.204209] (-) TimerEvent: {}
[7.313536] (-) TimerEvent: {}
[7.430274] (-) TimerEvent: {}
[7.551708] (-) TimerEvent: {}
[7.653521] (-) TimerEvent: {}
[7.657456] (holonomic_robot) StderrLine: {'line': b'Traceback (most recent call last):\n  File "/usr/lib/python3/dist-packages/colcon_core/executor/__init__.py", line 91, in __call__\n    rc = await self.task(*args, **kwargs)\n  File "/usr/lib/python3/dist-packages/colcon_core/task/__init__.py", line 93, in __call__\n    return await task_method(*args, **kwargs)\n  File "/usr/lib/python3/dist-packages/colcon_ros/task/ament_python/build.py", line 51, in build\n    setup_py_data = get_setup_data(self.context.pkg, env)\n  File "/usr/lib/python3/dist-packages/colcon_core/task/python/__init__.py", line 20, in get_setup_data\n    return dict(pkg.metadata[key](env))\n  File "/usr/lib/python3/dist-packages/colcon_ros/package_augmentation/ros_ament_python.py", line 57, in getter\n    return get_setup_information(\n  File "/usr/lib/python3/dist-packages/colcon_python_setup_py/package_identification/python_setup_py.py", line 241, in get_setup_information\n    _setup_information_cache[hashable_env] = _get_setup_information(\n  File "/usr/lib/python3/dist-packages/colcon_python_setup_py/package_identification/python_setup_py.py", line 288, in _get_setup_information\n    result = subprocess.run(\n  File "/usr/lib/python3.8/subprocess.py", line 516, in run\n    raise CalledProcessError(retcode, process.args,\nsubprocess.CalledProcessError: Command \'[\'/usr/bin/python3\', \'-c\', \'import sys;from contextlib import suppress;exec("with suppress(ImportError):    from setuptools.extern.packaging.specifiers    import SpecifierSet");exec("with suppress(ImportError):    from packaging.specifiers import SpecifierSet");from distutils.core import run_setup;dist = run_setup(    \\\'setup.py\\\', script_args=(\\\'--dry-run\\\',), stop_after=\\\'config\\\');skip_keys = (\\\'cmdclass\\\', \\\'distclass\\\', \\\'ext_modules\\\', \\\'metadata\\\');data = {    key: value for key, value in dist.__dict__.items()     if (        not key.startswith(\\\'_\\\') and         not callable(value) and         key not in skip_keys and         key not in dist.display_option_names    )};data[\\\'metadata\\\'] = {    k: v for k, v in dist.metadata.__dict__.items()     if k not in (\\\'license_files\\\', \\\'provides_extras\\\')};sys.stdout.buffer.write(repr(data).encode(\\\'utf-8\\\'))\']\' returned non-zero exit status 1.\n'}
[7.662199] (holonomic_robot) JobEnded: {'identifier': 'holonomic_robot', 'rc': 1}
[7.679446] (occupancy_grid_demo) JobSkipped: {'identifier': 'occupancy_grid_demo'}
[7.679733] (-) EventReactorShutdown: {}
